# Publishing VSCode Extensions: https://code.visualstudio.com/api/working-with-extensions/publishing-extension
#   * $(PAT): https://stackoverflow.com/questions/58192624/publishing-vs-code-extension-via-azure-devops/58195815#58195815
#   * Extension Manifest (package.json): https://code.visualstudio.com/api/references/extension-manifest
# Building Py .whl for multiple Linux distros - manylinux: https://github.com/pypa/manylinux
# aarch64 (ARM64) support for manylinux builds: https://codepyre.com/2019/12/arming-yourself/

name: $(BuildId)

trigger: none
pr: none

variables:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN_VERSION: "1.72"

# variables set by pipeline
# - BUILD_NUMBER
# - BUILD_TYPE
# - cratesIoFeedOverride
# - OwnerPersonalAlias
# - PAT
# - toolchainFeed

jobs:
- job: "Build"
  strategy:
    matrix:
      # linux_x64:                        # 2023.06.30 ESRP Publishing of Py packs is not supported for linux_x86_64.
      #                                   # The "manylinux" approach is used.
      #   imageName: 'ubuntu-latest'      # Manylinux Py (x86_64) + VSCode Ext.
      #   arch: x86_64
      # linux_ARM64:
      #   imageName: 'ubuntu-latest'      # Manylinux Py (ARM64). Takes 45 - 65 minutes, hence is in a separate job.
      #   arch: aarch64
      mac:
        imageName: 'macOS-latest'       # MacOS-specific Py (Mac is usually quite limited).
        arch: x86_64
        additionalRustTargets: aarch64-apple-darwin
      windows:
        imageName: 'windows-latest'     # Win-specific Py + Platform-independent Py.
        arch: x86_64
        additionalRustTargets: aarch64-pc-windows-msvc
  pool:
    vmImage: $(imageName)
  variables:
    arch: $(arch)
  timeoutInMinutes: 90

  steps:
  - task: RustInstaller@1
    inputs:
      rustVersion: ms-$(RUST_TOOLCHAIN_VERSION)
      additionalTargets: $(additionalRustTargets)
      cratesIoFeedOverride: $(cratesIoFeedOverride)
      toolchainFeed: $(toolchainFeed)
    displayName: Install Rust toolchain

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'

  - script: |
      python ./prereqs.py --install && python ./version.py
    displayName: Install Prereqs and set version

  # Below VS Code extension build only needs to run on one platform (Linux x86_64 for now)
  - script: |
      npm install -g @vscode/vsce
    displayName: Install Prereqs for VSCode Extension
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  - script: |
      python build.py --wasm --npm --vscode
    displayName: Build VSCode Extension
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  - script: |
      mkdir -p '$(System.DefaultWorkingDirectory)/target/npm'
      npm pack --pack-destination '$(System.DefaultWorkingDirectory)/target/npm'
    displayName: Pack NPM Package
    workingDirectory: '$(System.DefaultWorkingDirectory)/npm'
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  - publish: $(System.DefaultWorkingDirectory)/target/npm
    artifact: NPM
    displayName: Upload NPM Package Artifact
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  # TODO: When the VSCode Extension is ready for publishing, remove the `--pre-release` flag for 'stable' BUILD_TYPE
  - script: |
      vsce package --pre-release
    displayName: Pack VSCode Extension
    workingDirectory: '$(System.DefaultWorkingDirectory)/vscode'
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  - publish: $(System.DefaultWorkingDirectory)/vscode
    artifact: VSIX
    displayName: Upload VSCode Extension Artifact
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['arch'], 'x86_64'))

  - script: |
      python build.py --pip --no-check --no-test --no-check-prereqs
    displayName: Build Platform-Dependent Py Packages, non-Linux
    condition: ne(variables['Agent.OS'], 'Linux')

  # Build JupyterLab on Windows (was seeing some Access Denied errors on Linux)
  - script: |
      python build.py --jupyterlab --no-check
    displayName: Build Platform-Independent Py Packages
    condition: eq(variables['Agent.OS'], 'Windows_NT')

